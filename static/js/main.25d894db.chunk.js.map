{"version":3,"sources":["styles/custom-popup.module.css","assets/twitter-logo.svg","Popup.js","App.js","index.js"],"names":["module","exports","CustomPopup","props","useState","show","setShow","useEffect","style","visibility","opacity","className","popupStyles","overlay","popup","title","close","onClick","e","onClose","content","children","TWITTER_HANDLE","TWITTER_LINK","CONTRACT_ADDRESS","App","currentAccount","setCurrentAccount","setVisibility","token","setTokenId","checkIfWalletIsConnected","a","window","ethereum","console","log","request","method","accounts","length","account","setupEventListener","connectWallet","alert","chainId","provider","ethers","providers","Web3Provider","signer","getSigner","Contract","myEpicNft","abi","on","from","tokenId","toNumber","toString","askContractToMintNft","connectedContract","makeAnEpicNFT","nftTxn","wait","hash","position","left","top","transform","xmlns","preserveAspectRatio","viewBox","width","height","fill","x","y","fontFamily","font","dominantBaseline","textAnchor","open","alt","src","twitterLogo","href","target","rel","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25d894db.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"custom-popup_overlay__3BDqV\",\"popup\":\"custom-popup_popup__2XZre\",\"close\":\"custom-popup_close__YXUGV\",\"content\":\"custom-popup_content__bR6pl\"};","export default __webpack_public_path__ + \"static/media/twitter-logo.a8a75254.svg\";","import { useEffect, useState } from \"react\";\r\nimport popupStyles from \"./styles/custom-popup.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nconst CustomPopup = (props) => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const closeHandler = (e) => {\r\n    setShow(false);\r\n    props.onClose(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setShow(props.show);\r\n  }, [props.show]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        visibility: show ? \"visible\" : \"hidden\",\r\n        opacity: show ? \"1\" : \"0\"\r\n      }}\r\n      className={popupStyles.overlay}\r\n    >\r\n      <div className={popupStyles.popup}>\r\n        <h2>{props.title}</h2>\r\n        <span className={popupStyles.close} onClick={closeHandler}>\r\n          &times;\r\n        </span>\r\n        <div className={popupStyles.content}>{props.children}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCustomPopup.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  show: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired\r\n};\r\nexport default CustomPopup;","import React, { useEffect, useState } from \"react\";\nimport './styles/App.css';\nimport twitterLogo from './assets/twitter-logo.svg';\nimport { ethers } from \"ethers\";\nimport myEpicNft from './utils/MyEpicNFT.json';\nimport CustomPopup from \"./Popup\";\n\n\nconst TWITTER_HANDLE = 'grobinson_';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\n// const OPENSEA_LINK = '';\n// const TOTAL_MINT_COUNT = 50;\n\nconst CONTRACT_ADDRESS = \"0xdbA961F4432f7551cF31C0fB9a9Aa94800754498\";\n\n\n\n\nconst App = () => {\n  \n\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n  const [visibility, setVisibility] = useState(false);\n  const [token, setTokenId] = useState(\"\");\n\n\n  const popupCloseHandler = (e) => {\n    setVisibility(e);\n   \n\n\n  };\n\n  useEffect(() => {\n    const checkIfWalletIsConnected = async () => {\n      const { ethereum } = window;\n  \n      if (!ethereum) {\n          console.log(\"Make sure you have metamask!\");\n          return;\n      } else {\n          console.log(\"We have the ethereum object\", ethereum);\n      }\n      \n   \n      const accounts = await ethereum.request({ method: 'eth_accounts' });\n  \n      if (accounts.length !== 0) {\n          const account = accounts[0];\n          console.log(\"Found an authorized account:\", account);\n          setCurrentAccount(account)\n          \n          \n          // Setup listener! This is for the case where a user comes to our site\n          // and ALREADY had their wallet connected + authorized.\n          setupEventListener()\n      } else {\n          console.log(\"No authorized account found\")\n      }\n  };\n    checkIfWalletIsConnected()},\n    // eslint-disable-line react-hooks/exhaustive-deps\n    []);\n    \n    \n  \n\nconst connectWallet = async () => {\n  try {\n    const { ethereum } = window;\n\n    if (!ethereum) {\n      alert(\"Get MetaMask!\");\n      return;\n    }\n\n    const accounts = await ethereum.request({ method: \"eth_requestAccounts\" });\n\n    console.log(\"Connected\", accounts[0]);\n    setCurrentAccount(accounts[0]);\n\n    // Setup listener! This is for the case where a user comes to our site\n    // and connected their wallet for the first time.\n    setupEventListener() \n  } catch (error) {\n    console.log(error)\n  }\n}\n\n// Setup our listener.\nconst setupEventListener = async () => {\n\n  // Most of this looks the same as our function askContractToMintNft\n  try {\n    const { ethereum } = window;\n\n    if (ethereum) {\n      let chainId = await ethereum.request({ method: 'eth_chainId' });\n    console.log(\"Connected to chain \" + chainId);\n\n    // String, hex code of the chainId of the Rinkebey test network\n    const rinkebyChainId = \"0x4\"; \n    if (chainId !== rinkebyChainId) {\n\t  alert(\"You are not connected to the Rinkeby Test Network!\");\n}\n      // Same stuff again\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      const connectedContract = new ethers.Contract(CONTRACT_ADDRESS, myEpicNft.abi, signer);\n      \n      // THIS IS THE MAGIC SAUCE.\n      // This will essentially \"capture\" our event when our contract throws it.\n      // If you're familiar with webhooks, it's very similar to that!\n      connectedContract.on(\"NewEpicNFTMinted\", (from, tokenId) => {\n        console.log(from, tokenId.toNumber())\n        setTokenId(tokenId.toString())\n        setVisibility(true)\n        //alert(`Hey there! We've minted your NFT and sent it to your wallet. It may be blank right now. It can take a max of 10 min to show up on OpenSea. Here's the link: https://testnets.opensea.io/assets/${CONTRACT_ADDRESS}/${tokenId.toNumber()}`)\n      });\n\n      console.log(\"Setup event listener!\")\n\n    } else {\n      console.log(\"Ethereum object doesn't exist!\");\n    }\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nconst askContractToMintNft = async () => {\n  try {\n    const { ethereum } = window;\n\n    if (ethereum) {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      const connectedContract = new ethers.Contract(CONTRACT_ADDRESS, myEpicNft.abi, signer);\n\n      console.log(\"Going to pop wallet now to pay gas...\")\n      let nftTxn = await connectedContract.makeAnEpicNFT();\n\n      console.log(\"Mining...please wait.\")\n      await nftTxn.wait();\n      console.log(nftTxn);\n      console.log(`Mined, see transaction: https://rinkeby.etherscan.io/tx/${nftTxn.hash}`);\n      \n\n    } else {\n      console.log(\"Ethereum object doesn't exist!\");\n    }\n  } catch (error) {\n    console.log(error)\n  }\n}\n\n\n\n\nconst renderNotConnectedContainer = () => (\n  <button onClick={connectWallet} className=\"cta-button connect-wallet-button\">\n    Connect to Wallet\n  </button>\n);\n\nconst renderMintUI = () => (\n  <button onClick={askContractToMintNft} className=\"cta-button connect-wallet-button\">\n    Mint NFT\n  </button>\n)\n\nconst openNFT = () => (\n  \n  window.open(`https://testnets.opensea.io/assets/${CONTRACT_ADDRESS}/${token}`, '_blank')\n)\n\n\nreturn (\n  <div className=\"App\">\n    <div className=\"container\">\n      <div className=\"header-container\">\n        <p className=\"header gradient-text\">My NFT Collection</p>\n        <p className=\"sub-text\">\n          Each unique. Each beautiful. Discover your NFT today.\n        </p>\n        \n        {currentAccount === \"\" ? renderNotConnectedContainer() : renderMintUI()}\n        <br></br>\n        <br></br>\n        <br></br>\n        <div className=\"center-image\" style={{ position: 'absolute', left: '50%', top: '50%',\n        transform: 'translate(-50%, -50%)'}}>\n  \n       <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    preserveAspectRatio=\"xMinYMin meet\"\n    viewBox=\"0 0 350 350\" width=\"100%\" height=\"100%\">\n    <rect width=\"100%\" height=\"100%\" fill=\"blue\" />\n    <text\n      x=\"50%\"\n      y=\"50%\"\n      style={{\n        fontFamily: \"verdana\",\n      }}\n      fill=\"white\"\n      font=\"white\"\n      className=\"base\"\n      dominantBaseline=\"middle\"\n      textAnchor=\"middle\">\n      {\"HOME. UNITE. FEEL.\"}\n    </text>\n  </svg>\n  \n\n</div>  \n<button onClick={askContractToMintNft} className=\"cta-button connect-wallet-button\" style={{ position: 'absolute', left: '50%', top: '75%',\n        transform: 'translate(-50%, -50%)'}}>\n    View EPIC NFT on OpenSea\n  </button>\n\n        <CustomPopup\n        onClose={popupCloseHandler}\n        show={visibility}\n        title=\"Congratulations!\"\n      >\n        <p>Hey there! We've minted your NFT and sent it to your wallet. It may be blank right now. It can take a max of 10 min to show up on OpenSea.</p>\n        <button onClick={openNFT} className=\"cta-button connect-wallet-button\">\n    Mint NFT\n  </button>\n      </CustomPopup>\n      </div>\n\n      <div className=\"footer-container\">\n        <img alt=\"Twitter Logo\" className=\"twitter-logo\" src={twitterLogo} />\n        <a\n          className=\"footer-text\"\n          href={TWITTER_LINK}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >{`built on @${TWITTER_HANDLE}`}</a>\n      </div>\n    </div>\n  </div>\n);\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}